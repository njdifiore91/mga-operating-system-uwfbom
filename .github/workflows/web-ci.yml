name: Web CI

on:
  push:
    branches: [main, develop]
    paths: ['src/web/**']
  pull_request:
    branches: [main, develop]
    paths: ['src/web/**']
  schedule:
    - cron: '0 0 * * 0' # Weekly security scans

env:
  NODE_VERSION: '18.x'
  COVERAGE_THRESHOLD: 80

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: security-extended

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run Snyk Security Scan
        uses: snyk/actions/node@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/web/package-lock.json

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            src/web/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('src/web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: src/web
        run: npm ci

      - name: Type check
        working-directory: src/web
        run: npm run typecheck

      - name: Lint code
        working-directory: src/web
        run: npm run lint

      - name: Run unit tests
        working-directory: src/web
        run: npm run test:coverage
        env:
          CI: true
          NODE_ENV: test

      - name: Verify test coverage
        working-directory: src/web
        run: |
          COVERAGE=$(npm run test:coverage | grep -o '[0-9.]*%' | head -1 | cut -d'%' -f1)
          if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
            echo "Test coverage ($COVERAGE%) is below threshold ($COVERAGE_THRESHOLD%)"
            exit 1
          fi

      - name: Build application
        working-directory: src/web
        run: npm run build
        env:
          CI: true
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: src/web/dist
          retention-days: 7

  cross-browser:
    name: Cross Browser Testing
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        browser: [chrome, firefox]
        node-version: [16.x, 18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: src/web/package-lock.json

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: src/web/dist

      - name: Install dependencies
        working-directory: src/web
        run: npm ci

      - name: Run browser tests
        working-directory: src/web
        run: npm run test -- --browser ${{ matrix.browser }}
        env:
          CI: true
          NODE_ENV: test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.browser }}-node-${{ matrix.node-version }}
          path: src/web/coverage
          retention-days: 7

  accessibility:
    name: Accessibility Testing
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/web/package-lock.json

      - name: Install dependencies
        working-directory: src/web
        run: npm ci

      - name: Run accessibility tests
        working-directory: src/web
        run: npm run test -- --testMatch='**/*.a11y.{ts,tsx}'
        env:
          CI: true
          NODE_ENV: test

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-report
          path: src/web/coverage/accessibility
          retention-days: 7