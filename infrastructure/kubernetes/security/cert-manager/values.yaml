# Cert-manager Helm values configuration for MGA OS platform
# Chart: jetstack/cert-manager v1.11.0

# Install CRDs as part of the release
installCRDs: true

# High availability configuration with 3 replicas
replicaCount: 3

# Container image configuration
image:
  repository: quay.io/jetstack/cert-manager-controller
  tag: v1.11.0
  pullPolicy: IfNotPresent

# Service account configuration with AWS IAM role for Route53 DNS validation
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/mga-cert-manager-route53

# Prometheus monitoring configuration
prometheus:
  enabled: true
  servicemonitor:
    enabled: true
    namespace: mga-monitoring
    labels:
      release: prometheus
    interval: 30s

# Webhook configuration
webhook:
  replicaCount: 3
  timeoutSeconds: 30
  hostNetwork: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001

# CA injector configuration
cainjector:
  replicaCount: 3
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi

# Pod security context
podSecurityContext:
  fsGroup: 1001
  runAsUser: 1001
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Container security context
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001
  seccompProfile:
    type: RuntimeDefault

# Resource requests and limits
resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 200m
    memory: 512Mi

# Tolerations for critical addon
tolerations:
  - key: CriticalAddonsOnly
    operator: Exists

# Affinity rules for high availability
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - cert-manager
        topologyKey: kubernetes.io/hostname
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux

# Default issuer configuration
ingressShim:
  defaultIssuerName: mga-letsencrypt-prod
  defaultIssuerKind: ClusterIssuer
  defaultIssuerGroup: cert-manager.io

# DNS configuration for ACME DNS01 challenges
dns01RecursiveNameservers: "8.8.8.8:53,1.1.1.1:53"

# Additional arguments
extraArgs:
  - --dns01-recursive-nameservers-only
  - --enable-certificate-owner-ref=true
  - --v=2
  - --max-concurrent-challenges=60

# Pod disruption budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network policy configuration
networkPolicy:
  enabled: true
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: cert-manager