server:
  image:
    repository: hashicorp/vault
    tag: 1.13.1
    pullPolicy: IfNotPresent
  
  replicas: 3
  
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true
      config:
        retryJoin:
          enabled: true
          maxJoinRetries: 10

  auditStorage:
    enabled: true
    storageClass: mga-db-storage
    size: 10Gi
    accessMode: ReadWriteOnce
    annotations:
      backup.velero.io/backup-volumes: audit-logs
    retention:
      enabled: true
      days: 90

  dataStorage:
    enabled: true
    storageClass: mga-db-storage
    size: 50Gi
    accessMode: ReadWriteOnce
    annotations:
      backup.velero.io/backup-volumes: vault-data

  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/mga-vault-role
    extraLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: mga-os

  extraEnvironmentVars:
    VAULT_SEAL_TYPE: awskms
    VAULT_AWSKMS_SEAL_KEY_ID: ${KMS_KEY_ID}
    VAULT_LOG_LEVEL: info
    VAULT_AUDIT_LOG_PATH: /vault/audit/audit.log

  resources:
    requests:
      memory: 1Gi
      cpu: 500m
    limits:
      memory: 2Gi
      cpu: 1000m

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: vault
              app.kubernetes.io/instance: vault
          topologyKey: kubernetes.io/hostname

  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: vault

injector:
  enabled: true
  replicas: 2
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 512Mi
      cpu: 500m
  metrics:
    enabled: true
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9102"
  failurePolicy: Fail
  logLevel: info
  webhookTimeout: "30"

csi:
  enabled: true
  daemonSet:
    providesStorage: true
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 512Mi
        cpu: 500m
  extraArgs:
    - --provider-volume-path=/var/lib/kubelet/provider-volumes

ui:
  enabled: true
  serviceType: ClusterIP
  externalPort: 8200
  targetPort: 8200
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: "true"