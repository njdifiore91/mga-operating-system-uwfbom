apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mga-web-ingress
  namespace: mga-production
  labels:
    app: mga-web
    component: frontend
    environment: production
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Proxy timeouts and limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.mga-os.example.com"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "5"
    
    # Security headers
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    
    # SSL certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Metrics collection
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

spec:
  tls:
    - hosts:
        - mga-os.example.com
      secretName: mga-web-tls
  rules:
    - host: mga-os.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mga-web
                port:
                  number: 80