# Prometheus Helm values configuration for MGA OS platform monitoring
# Chart version: prometheus-community/prometheus@15.10.0

global:
  namespace: monitoring
  serviceAccount: prometheus-server

server:
  # Enhanced server configuration for production workloads
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi

  retention:
    time: 30d
    size: 100GB

  persistence:
    enabled: true
    size: 100Gi
    storageClass: gp3-encrypted
    annotations:
      backup.velero.io/backup-volumes: prometheus-data

  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    fsGroup: 65534

alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname', 'severity']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: 'platform-team'
      routes:
        - match:
            severity: critical
          receiver: 'platform-team'
          repeat_interval: 1h

    receivers:
      - name: 'platform-team'
        pagerduty_configs:
          - service_key: ${PAGERDUTY_SERVICE_KEY}
            send_resolved: true

alerting:
  groups:
    - name: mga_os_sla_alerts
      rules:
        - alert: APIUptimeBelow999
          expr: avg_over_time(up{job="mga-os-backend"}[5m]) < 0.999
          for: 5m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: API uptime below 99.9%
            description: API availability has dropped below SLA threshold

        - alert: HighResponseTime
          expr: histogram_quantile(0.95, rate(mga_os_response_time_seconds_bucket[5m])) > 2
          for: 5m
          labels:
            severity: critical
            team: platform
          annotations:
            summary: High API response time
            description: 95th percentile response time exceeds 2 seconds

        - alert: LowThroughput
          expr: sum(rate(mga_os_http_requests_total[5m])) < 166
          for: 5m
          labels:
            severity: warning
            team: platform
          annotations:
            summary: Low transaction throughput
            description: Transaction rate below 10,000 per minute threshold

scrape_configs:
  - job_name: kubernetes-pods
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
    metric_relabel_configs:
      - source_labels: [__name__]
        action: keep
        regex: mga_os_.*

  - job_name: mga-os-backend
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names: [mga-production]
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s

  - job_name: node-metrics
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

serviceMonitor:
  enabled: true
  namespace: monitoring
  interval: 15s
  scrapeTimeout: 10s
  selector:
    matchLabels:
      app.kubernetes.io/part-of: mga-os

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  hosts:
    - prometheus.mga-os.internal
  tls:
    - secretName: prometheus-tls
      hosts:
        - prometheus.mga-os.internal

networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: mga-monitoring
    - from:
        - podSelector:
            matchLabels:
              app: mga-os
              component: backend

pushgateway:
  enabled: false

nodeExporter:
  enabled: true
  tolerations:
    - operator: Exists

kubeStateMetrics:
  enabled: true